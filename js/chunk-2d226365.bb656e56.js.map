{"version":3,"sources":["webpack:///./node_modules/@aws-amplify/ui-components/dist/esm-es5/amplify-confirm-sign-in_7.entry.js"],"names":["__webpack_require__","r","__webpack_exports__","d","AmplifyConfirmSignIn","AmplifyConfirmSignUp","AmplifyForgotPassword","AmplifyRequireNewPassword","AmplifySignIn","AmplifySignUp","AmplifyVerifyContact","_index_83f2275b_js__WEBPACK_IMPORTED_MODULE_0__","_aws_amplify_core__WEBPACK_IMPORTED_MODULE_1__","_aws_amplify_core__WEBPACK_IMPORTED_MODULE_2__","_aws_amplify_core__WEBPACK_IMPORTED_MODULE_3__","_auth_types_78df304e_js__WEBPACK_IMPORTED_MODULE_4__","_aws_amplify_auth__WEBPACK_IMPORTED_MODULE_5__","_Translations_c833f663_js__WEBPACK_IMPORTED_MODULE_6__","_constants_d7afd96c_js__WEBPACK_IMPORTED_MODULE_7__","_helpers_80b400b1_js__WEBPACK_IMPORTED_MODULE_8__","_auth_helpers_aad95737_js__WEBPACK_IMPORTED_MODULE_9__","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","length","push","__spreadArrays","s","i","il","arguments","Array","k","a","j","jl","class_1","hostRef","_this","Object","handleSubmit","event","confirm","headerText","CONFIRM_SMS_CODE","submitButtonText","CONFIRM","handleAuthStateChange","defaultFormFields","type","required","handleInputChange","handleCodeChange","formFields","mfaOption","SMS","loading","prototype","componentWillLoad","setup","userHandler","user","SoftwareTokenMFA","TOTP","CONFIRM_TOTP_CODE","constructedFormFieldOptions","constructFormFieldOptions","code","target","mfaType","error_1","_a","preventDefault","confirmSignIn","Error","content","undefined","forEach","formField","assign","render","get","secondaryFooterContent","variant","onClick","SignIn","BACK_TO_SIGN_IN","defineProperty","enumerable","configurable","class_2","confirmSignUp","CONFIRM_SIGN_UP_HEADER_TEXT","CONFIRM_SIGN_UP_SUBMIT_BUTTON_TEXT","usernameAlias","newFormFields","phoneNumber","countryDialCodeValue","phoneNumberValue","formFieldsHandler","buildFormFields","userInput","username","_signUpAttrs","signUpAttrs","buildDefaultFormFields","handleFormFieldInputChange","disabled","inputProps","autocomplete","CONFIRM_SIGN_UP_CODE_LABEL","placeholder","CONFIRM_SIGN_UP_CODE_PLACEHOLDER","hint","CONFIRM_SIGN_UP_LOST_CODE","resendConfirmCode","CONFIRM_SIGN_UP_RESEND_CODE","newFields_1","field","newField","handleFormFieldInputWithCallback","fieldType","setFieldValue","dialCode","fnToCall","cb","callback","bind","getUsername","error_2","resendSignUp","EMPTY_USERNAME","trim","confirmSignUpResult","error_3","CONFIRM_SIGN_UP_FAILED","password","logger","class_3","RESET_YOUR_PASSWORD","sendButtonText","SEND_CODE","SUBMIT","handleSend","send","submit","delivery","forgotPasswordAttrs","data-test","formAttributes","data","error_4","forgotPassword","error","debug","NEW_PASSWORD_LABEL","NEW_PASSWORD_PLACEHOLDER","CodeDeliveryDetails","error_5","_b","forgotPasswordSubmit","submitFn","testDataPrefix","logger$1","class_4","CHANGE_PASSWORD","CHANGE_PASSWORD_ACTION","completeNewPassword","Password","handlePasswordChange","requiredAttributes","setCurrentUser","handleRequiredAttributeInputChange","attribute","formatPhoneNumber","error_6","userRequiredAttributes","requiredAttributesMap_1","currentAuthenticatedUser","currentUser","challengeParam","name","composedInput","err","error_7","challengeName","SMSMFA","MFASetup","ConfirmSignIn","TOTPSetup","amplifySignInCss","class_5","signIn","SIGN_IN_HEADER_TEXT","SIGN_IN_ACTION","hideSignUp","signInAttributes","formFieldInputs","FORGOT_PASSWORD_TEXT","ForgotPassword","RESET_PASSWORD_TEXT","newFields_2","slot","federated","class","NO_ACCOUNT_TEXT","SignUp","CREATE_ACCOUNT_TEXT","style","amplifySignUpCss","class_6","signUp","handleSignUp","params","authSignUp","SIGN_UP_HEADER_TEXT","SIGN_UP_SUBMIT_BUTTON_TEXT","haveAccountText","SIGN_UP_HAVE_ACCOUNT_TEXT","signInText","SIGN_IN_TEXT","signUpAttributes","attributes","email","SIGN_UP_FAILED","assignPhoneNumberToSignUpAttributes","phone_number","assignUserNameAliasToSignUpAttributes","assignFormInputToSignUpAttributes","validateSignUpAttributes","EMPTY_EMAIL","EMPTY_PHONE","indexOf","USERNAME_REMOVE_WHITESPACE","PASSWORD_REMOVE_WHITESPACE","error_8","userConfirmed","ConfirmSignUp","SIGN_UP_EMAIL_PLACEHOLDER","SIGN_UP_PASSWORD_PLACEHOLDER","SIGN_UP_USERNAME_PLACEHOLDER","newFields_3","logger$2","class_7","verifyAttr","verify","contact","attr","error_9","verifyCurrentUserAttributeSubmit","SignedIn","error_10","verifyCurrentUserAttribute","inputName","renderSubmit","CODE_PLACEHOLDER","renderVerify","unverified","VERIFY_CONTACT_EMAIL_LABEL","key","VERIFY_CONTACT_PHONE_LABEL","VERIFY_CONTACT_HEADER_TEXT","VERIFY_CONTACT_SUBMIT_LABEL","VERIFY_CONTACT_VERIFY_LABEL"],"mappings":"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","file":"js/chunk-2d226365.bb656e56.js","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { r as registerInstance, h, H as Host } from './index-83f2275b.js';\nimport { I18n, Logger, ConsoleLogger, isEmpty } from '@aws-amplify/core';\nimport { M as MfaOption, C as ChallengeName, A as AuthState, a as AuthFormField, U as UsernameAlias } from './auth-types-78df304e.js';\nimport { Auth } from '@aws-amplify/auth';\nimport { T as Translations } from './Translations-c833f663.js';\nimport { N as NO_AUTH_MODULE_FOUND, h as COUNTRY_DIAL_CODE_DEFAULT, b as PHONE_SUFFIX } from './constants-d7afd96c.js';\nimport { d as dispatchAuthStateChangeEvent, a as dispatchToastHubEvent, c as checkUsernameAlias, i as isHintValid, h as handlePhoneNumberChange, b as composePhoneNumberInput, g as getRequiredAttributesMap } from './helpers-80b400b1.js';\nimport { c as checkContact, h as handleSignIn } from './auth-helpers-aad95737.js';\nvar AmplifyConfirmSignIn = /** @class */ (function () {\n    function class_1(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        /** Fires when confirm sign in form is submitted */\n        this.handleSubmit = function (event) { return _this.confirm(event); };\n        /** Used for header text in confirm sign in component */\n        this.headerText = Translations.CONFIRM_SMS_CODE;\n        /** Used for the submit button text in confirm sign in component */\n        this.submitButtonText = Translations.CONFIRM;\n        /** Auth state change handler for this component */\n        this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n        /** Default form field */\n        this.defaultFormFields = [\n            {\n                type: 'code',\n                required: true,\n                handleInputChange: function (event) { return _this.handleCodeChange(event); },\n            },\n        ];\n        /**\n         * Form fields allows you to utilize our pre-built components such as username field, code field, password field, email field, etc.\n         * by passing an array of strings that you would like the order of the form to be in. If you need more customization, such as changing\n         * text for a label or adjust a placeholder, you can follow the structure below in order to do just that.\n         * ```\n         * [\n         *  {\n         *    type: string,\n         *    label: string,\n         *    placeholder: string,\n         *    hint: string | Functional Component | null,\n         *    required: boolean\n         *  }\n         * ]\n         * ```\n         */\n        this.formFields = this.defaultFormFields;\n        /** The MFA option to confirm with */\n        this.mfaOption = MfaOption.SMS;\n        /* Whether or not the confirm-sign-in component is loading */\n        this.loading = false;\n    }\n    class_1.prototype.componentWillLoad = function () {\n        this.setup();\n    };\n    class_1.prototype.userHandler = function () {\n        this.setup();\n    };\n    class_1.prototype.setup = function () {\n        if (this.user &&\n            this.user['challengeName'] === ChallengeName.SoftwareTokenMFA) {\n            this.mfaOption = MfaOption.TOTP;\n            // If header text is using default use TOTP string\n            if (this.headerText === Translations.CONFIRM_SMS_CODE) {\n                this.headerText = Translations.CONFIRM_TOTP_CODE;\n            }\n        }\n        this.constructedFormFieldOptions = this.constructFormFieldOptions(this.formFields);\n    };\n    class_1.prototype.handleCodeChange = function (event) {\n        this.code = event.target.value;\n    };\n    class_1.prototype.confirm = function (event) {\n        return __awaiter(this, void 0, void 0, function () {\n            var mfaType, error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (event) {\n                            event.preventDefault();\n                        }\n                        mfaType = this.user['challengeName'] === ChallengeName.SoftwareTokenMFA\n                            ? ChallengeName.SoftwareTokenMFA\n                            : null;\n                        if (!Auth || typeof Auth.confirmSignIn !== 'function') {\n                            throw new Error(NO_AUTH_MODULE_FOUND);\n                        }\n                        this.loading = true;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 4, 5, 6]);\n                        return [4 /*yield*/, Auth.confirmSignIn(this.user, this.code, mfaType)];\n                    case 2:\n                        _a.sent();\n                        return [4 /*yield*/, checkContact(this.user, this.handleAuthStateChange)];\n                    case 3:\n                        _a.sent();\n                        return [3 /*break*/, 6];\n                    case 4:\n                        error_1 = _a.sent();\n                        dispatchToastHubEvent(error_1);\n                        return [3 /*break*/, 6];\n                    case 5:\n                        this.loading = false;\n                        return [7 /*endfinally*/];\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_1.prototype.constructFormFieldOptions = function (formFields) {\n        var _this = this;\n        var content = [];\n        if (formFields === undefined)\n            return undefined;\n        if (formFields.length <= 0)\n            return this.defaultFormFields;\n        formFields.forEach(function (formField) {\n            if (typeof formField === 'string' || formField.type !== 'code') {\n                // This is either a `string`, and/or a custom field that isn't `code`. Pass this directly.\n                content.push(formField);\n            }\n            else {\n                // This is a code input field. Attach input handler.\n                content.push(Object.assign({ handleInputChange: function (event) { return _this.handleCodeChange(event); } }, formField));\n            }\n        });\n        return content;\n    };\n    class_1.prototype.render = function () {\n        var _this = this;\n        return (h(Host, null, h(\"amplify-form-section\", { headerText: I18n.get(this.headerText), handleSubmit: this.handleSubmit, submitButtonText: I18n.get(this.submitButtonText), loading: this.loading, secondaryFooterContent: h(\"span\", null, h(\"amplify-button\", { variant: \"anchor\", onClick: function () { return _this.handleAuthStateChange(AuthState.SignIn); } }, I18n.get(Translations.BACK_TO_SIGN_IN))) }, h(\"amplify-auth-fields\", { formFields: this.constructedFormFieldOptions }))));\n    };\n    Object.defineProperty(class_1, \"watchers\", {\n        get: function () {\n            return {\n                \"user\": [\"userHandler\"]\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return class_1;\n}());\nvar AmplifyConfirmSignUp = /** @class */ (function () {\n    function class_2(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        /** Fires when sign up form is submitted */\n        this.handleSubmit = function (event) { return _this.confirmSignUp(event); };\n        /** Used for header text in confirm sign up component */\n        this.headerText = Translations.CONFIRM_SIGN_UP_HEADER_TEXT;\n        /** Used for the submit button text in confirm sign up component */\n        this.submitButtonText = Translations.CONFIRM_SIGN_UP_SUBMIT_BUTTON_TEXT;\n        /**\n         * Form fields allows you to utilize our pre-built components such as username field, code field, password field, email field, etc.\n         * by passing an array of strings that you would like the order of the form to be in. If you need more customization, such as changing\n         * text for a label or adjust a placeholder, you can follow the structure below in order to do just that.\n         * ```\n         * [\n         *  {\n         *    type: string,\n         *    label: string,\n         *    placeholder: string,\n         *    hint: string | Functional Component | null,\n         *    required: boolean\n         *  }\n         * ]\n         * ```\n         */\n        this.formFields = [];\n        /** Auth state change handler for this components\n         * e.g. SignIn -> 'Create Account' link -> SignUp\n         */\n        this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n        /** Username Alias is used to setup authentication with `username`, `email` or `phone_number`  */\n        this.usernameAlias = 'username';\n        this.loading = false;\n        this.newFormFields = [];\n        this.phoneNumber = {\n            countryDialCodeValue: COUNTRY_DIAL_CODE_DEFAULT,\n            phoneNumberValue: null,\n        };\n    }\n    class_2.prototype.componentWillLoad = function () {\n        this.setup();\n    };\n    class_2.prototype.formFieldsHandler = function () {\n        this.buildFormFields();\n    };\n    class_2.prototype.userHandler = function () {\n        this.setup();\n    };\n    class_2.prototype.setup = function () {\n        // TODO: Use optional chaining instead\n        this.userInput = this.user && this.user.username;\n        this._signUpAttrs = this.user && this.user.signUpAttrs;\n        checkUsernameAlias(this.usernameAlias);\n        this.buildFormFields();\n    };\n    class_2.prototype.buildDefaultFormFields = function () {\n        var _this = this;\n        this.newFormFields = [\n            {\n                type: \"\" + this.usernameAlias,\n                required: true,\n                handleInputChange: this.handleFormFieldInputChange(\"\" + this.usernameAlias),\n                value: this.userInput,\n                disabled: this.userInput ? true : false,\n                inputProps: { autocomplete: 'username' },\n            },\n            {\n                type: 'code',\n                label: I18n.get(Translations.CONFIRM_SIGN_UP_CODE_LABEL),\n                placeholder: I18n.get(Translations.CONFIRM_SIGN_UP_CODE_PLACEHOLDER),\n                required: true,\n                hint: (h(\"div\", null, I18n.get(Translations.CONFIRM_SIGN_UP_LOST_CODE), ' ', h(\"amplify-button\", { variant: \"anchor\", onClick: function () { return _this.resendConfirmCode(); } }, I18n.get(Translations.CONFIRM_SIGN_UP_RESEND_CODE)))),\n                handleInputChange: this.handleFormFieldInputChange('code'),\n            },\n        ];\n    };\n    class_2.prototype.buildFormFields = function () {\n        var _this = this;\n        if (this.formFields.length === 0) {\n            this.buildDefaultFormFields();\n        }\n        else {\n            var newFields_1 = [];\n            this.formFields.forEach(function (field) {\n                var newField = Object.assign({}, field);\n                if (newField.type === 'code') {\n                    newField['hint'] = isHintValid(newField) ? (h(\"div\", null, I18n.get(Translations.CONFIRM_SIGN_UP_LOST_CODE), ' ', h(\"amplify-button\", { variant: \"anchor\", onClick: function () { return _this.resendConfirmCode(); } }, I18n.get(Translations.CONFIRM_SIGN_UP_RESEND_CODE)))) : (newField['hint']);\n                }\n                newField['handleInputChange'] = function (event) { return _this.handleFormFieldInputWithCallback(event, field); };\n                newFields_1.push(newField);\n            });\n            this.newFormFields = newFields_1;\n        }\n    };\n    class_2.prototype.handleFormFieldInputChange = function (fieldType) {\n        var _this = this;\n        switch (fieldType) {\n            case 'username':\n            case 'email':\n                return function (event) { return (_this.userInput = event.target.value); };\n            case 'phone_number':\n                return function (event) { return handlePhoneNumberChange(event, _this.phoneNumber); };\n            case 'code':\n                return function (event) { return (_this.code = event.target.value); };\n            default:\n                return;\n        }\n    };\n    class_2.prototype.setFieldValue = function (field) {\n        switch (field.type) {\n            case 'username':\n            case 'email':\n                if (field.value === undefined) {\n                    this.userInput = '';\n                }\n                else {\n                    this.userInput = field.value;\n                }\n                break;\n            case 'phone_number':\n                if (field.dialCode) {\n                    this.phoneNumber.countryDialCodeValue = field.dialCode;\n                }\n                this.phoneNumber.phoneNumberValue = field.value;\n                break;\n        }\n    };\n    class_2.prototype.handleFormFieldInputWithCallback = function (event, field) {\n        var fnToCall = field['handleInputChange']\n            ? field['handleInputChange']\n            : function (event, cb) {\n                cb(event);\n            };\n        var callback = this.handleFormFieldInputChange(field.type);\n        fnToCall(event, callback.bind(this));\n    };\n    /**\n     * Returns the username of the user to confirm. If a valid `user.username` has been passed as a prop, we return that.\n     * Otherwise, we return the `userInput` on the form.\n     */\n    class_2.prototype.getUsername = function () {\n        if (this.user && this.user.username)\n            return this.user.username;\n        switch (this.usernameAlias) {\n            case 'username':\n            case 'email':\n                return this.userInput;\n            case 'phone_number':\n                return composePhoneNumberInput(this.phoneNumber);\n        }\n    };\n    class_2.prototype.resendConfirmCode = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var username, error_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (event) {\n                            event.preventDefault();\n                        }\n                        if (!Auth || typeof Auth.resendSignUp !== 'function') {\n                            throw new Error(NO_AUTH_MODULE_FOUND);\n                        }\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        username = this.getUsername();\n                        if (!username)\n                            throw new Error(Translations.EMPTY_USERNAME);\n                        return [4 /*yield*/, Auth.resendSignUp(username.trim())];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        error_2 = _a.sent();\n                        dispatchToastHubEvent(error_2);\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // TODO: Add validation\n    // TODO: Prefix\n    class_2.prototype.confirmSignUp = function (event) {\n        return __awaiter(this, void 0, void 0, function () {\n            var username, confirmSignUpResult, error_3;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (event) {\n                            event.preventDefault();\n                        }\n                        if (!Auth || typeof Auth.confirmSignUp !== 'function') {\n                            throw new Error(NO_AUTH_MODULE_FOUND);\n                        }\n                        this.loading = true;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 6, 7, 8]);\n                        username = this.getUsername();\n                        if (!username)\n                            throw new Error(Translations.EMPTY_USERNAME);\n                        username = username.trim();\n                        return [4 /*yield*/, Auth.confirmSignUp(username, this.code)];\n                    case 2:\n                        confirmSignUpResult = _a.sent();\n                        if (!confirmSignUpResult) {\n                            throw new Error(I18n.get(Translations.CONFIRM_SIGN_UP_FAILED));\n                        }\n                        if (!(this._signUpAttrs &&\n                            this._signUpAttrs.password &&\n                            this._signUpAttrs.password !== '')) return [3 /*break*/, 4];\n                        // Auto sign in user if password is available from previous workflow\n                        return [4 /*yield*/, handleSignIn(username, this._signUpAttrs.password, this.handleAuthStateChange)];\n                    case 3:\n                        // Auto sign in user if password is available from previous workflow\n                        _a.sent();\n                        return [3 /*break*/, 5];\n                    case 4:\n                        this.handleAuthStateChange(AuthState.SignIn);\n                        _a.label = 5;\n                    case 5: return [3 /*break*/, 8];\n                    case 6:\n                        error_3 = _a.sent();\n                        dispatchToastHubEvent(error_3);\n                        return [3 /*break*/, 8];\n                    case 7:\n                        this.loading = false;\n                        return [7 /*endfinally*/];\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_2.prototype.render = function () {\n        var _this = this;\n        return (h(Host, null, h(\"amplify-form-section\", { headerText: I18n.get(this.headerText), submitButtonText: I18n.get(this.submitButtonText), handleSubmit: this.handleSubmit, loading: this.loading, secondaryFooterContent: h(\"div\", null, h(\"span\", null, h(\"amplify-button\", { variant: \"anchor\", onClick: function () { return _this.handleAuthStateChange(AuthState.SignIn); } }, I18n.get(Translations.BACK_TO_SIGN_IN)))) }, h(\"amplify-auth-fields\", { formFields: this.newFormFields }))));\n    };\n    Object.defineProperty(class_2, \"watchers\", {\n        get: function () {\n            return {\n                \"formFields\": [\"formFieldsHandler\"],\n                \"user\": [\"userHandler\"]\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return class_2;\n}());\nvar logger = new Logger('ForgotPassword');\nvar AmplifyForgotPassword = /** @class */ (function () {\n    function class_3(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        /** The header text of the forgot password section */\n        this.headerText = Translations.RESET_YOUR_PASSWORD;\n        /** The text displayed inside of the send code button for the form */\n        this.sendButtonText = Translations.SEND_CODE;\n        /** The text displayed inside of the submit button for the form */\n        this.submitButtonText = Translations.SUBMIT;\n        /** The form fields displayed inside of the forgot password form */\n        this.formFields = [];\n        /** The function called when making a request to reset password */\n        this.handleSend = function (event) { return _this.send(event); };\n        /** The function called when submitting a new password */\n        this.handleSubmit = function (event) { return _this.submit(event); };\n        /** Auth state change handler for this component */\n        this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n        /** Username Alias is used to setup authentication with `username`, `email` or `phone_number`  */\n        this.usernameAlias = 'username';\n        this.delivery = null;\n        this.loading = false;\n        this.phoneNumber = {\n            countryDialCodeValue: COUNTRY_DIAL_CODE_DEFAULT,\n            phoneNumberValue: null,\n        };\n        this.newFormFields = [];\n        this.forgotPasswordAttrs = {\n            userInput: '',\n            password: '',\n            code: '',\n        };\n    }\n    class_3.prototype.componentWillLoad = function () {\n        checkUsernameAlias(this.usernameAlias);\n        this.buildFormFields();\n    };\n    class_3.prototype.formFieldsHandler = function () {\n        this.buildFormFields();\n    };\n    class_3.prototype.buildFormFields = function () {\n        var _this = this;\n        if (this.formFields.length === 0) {\n            this.buildDefaultFormFields();\n        }\n        else {\n            this.formFields.forEach(function (field) {\n                var newField = Object.assign({}, field);\n                newField['handleInputChange'] = function (event) { return _this.handleFormFieldInputWithCallback(event, field); };\n                _this.newFormFields.push(newField);\n            });\n        }\n    };\n    class_3.prototype.buildDefaultFormFields = function () {\n        switch (this.usernameAlias) {\n            case 'email':\n                this.newFormFields = [\n                    {\n                        type: 'email',\n                        required: true,\n                        handleInputChange: this.handleFormFieldInputChange('email'),\n                        inputProps: {\n                            'data-test': 'forgot-password-email-input',\n                        },\n                    },\n                ];\n                break;\n            case 'phone_number':\n                this.newFormFields = [\n                    {\n                        type: 'phone_number',\n                        required: true,\n                        handleInputChange: this.handleFormFieldInputChange('phone_number'),\n                        inputProps: {\n                            'data-test': 'forgot-password-phone-number-input',\n                        },\n                    },\n                ];\n                break;\n            case 'username':\n            default:\n                this.newFormFields = [\n                    {\n                        type: 'username',\n                        required: true,\n                        handleInputChange: this.handleFormFieldInputChange('username'),\n                        inputProps: {\n                            'data-test': 'forgot-password-username-input',\n                        },\n                    },\n                ];\n                break;\n        }\n    };\n    class_3.prototype.handleFormFieldInputChange = function (fieldType) {\n        var _this = this;\n        switch (fieldType) {\n            case 'username':\n            case 'email':\n                return function (event) { return (_this.forgotPasswordAttrs.userInput = event.target.value); };\n            case 'phone_number':\n                return function (event) { return handlePhoneNumberChange(event, _this.phoneNumber); };\n            case 'password':\n            case 'code':\n                return function (event) { return (_this.forgotPasswordAttrs[fieldType] = event.target.value); };\n            default:\n                return;\n        }\n    };\n    class_3.prototype.setFieldValue = function (field, formAttributes) {\n        switch (field.type) {\n            case 'username':\n            case 'email':\n                if (field.value === undefined) {\n                    formAttributes.userInput = '';\n                }\n                else {\n                    formAttributes.userInput = field.value;\n                }\n                break;\n            case 'phone_number':\n                if (field.dialCode) {\n                    this.phoneNumber.countryDialCodeValue = field.dialCode;\n                }\n                this.phoneNumber.phoneNumberValue = field.value;\n                break;\n            case 'password':\n            case 'code':\n                if (field.value === undefined) {\n                    formAttributes[field.type] = '';\n                }\n                else {\n                    formAttributes[field.type] = field.value;\n                }\n                break;\n        }\n    };\n    class_3.prototype.handleFormFieldInputWithCallback = function (event, field) {\n        var fnToCall = field['handleInputChange']\n            ? field['handleInputChange']\n            : function (event, cb) {\n                cb(event);\n            };\n        var callback = this.handleFormFieldInputChange(field.type);\n        fnToCall(event, callback.bind(this));\n    };\n    class_3.prototype.send = function (event) {\n        return __awaiter(this, void 0, void 0, function () {\n            var data, error_4;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (event) {\n                            event.preventDefault();\n                        }\n                        if (!Auth || typeof Auth.forgotPassword !== 'function') {\n                            throw new Error(NO_AUTH_MODULE_FOUND);\n                        }\n                        this.loading = true;\n                        switch (this.usernameAlias) {\n                            case 'phone_number':\n                                try {\n                                    this.forgotPasswordAttrs.userInput = composePhoneNumberInput(this.phoneNumber);\n                                }\n                                catch (error) {\n                                    dispatchToastHubEvent(error);\n                                }\n                                break;\n                        }\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, 4, 5]);\n                        return [4 /*yield*/, Auth.forgotPassword(this.forgotPasswordAttrs.userInput.trim())];\n                    case 2:\n                        data = _a.sent();\n                        logger.debug(data);\n                        this.newFormFields = [\n                            {\n                                type: 'code',\n                                required: true,\n                                handleInputChange: this.handleFormFieldInputChange('code'),\n                                inputProps: {\n                                    'data-test': 'forgot-password-code-input',\n                                },\n                            },\n                            {\n                                type: 'password',\n                                required: true,\n                                handleInputChange: this.handleFormFieldInputChange('password'),\n                                label: I18n.get(Translations.NEW_PASSWORD_LABEL),\n                                placeholder: I18n.get(Translations.NEW_PASSWORD_PLACEHOLDER),\n                            },\n                        ];\n                        this.delivery = data.CodeDeliveryDetails;\n                        return [3 /*break*/, 5];\n                    case 3:\n                        error_4 = _a.sent();\n                        dispatchToastHubEvent(error_4);\n                        return [3 /*break*/, 5];\n                    case 4:\n                        this.loading = false;\n                        return [7 /*endfinally*/];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_3.prototype.submit = function (event) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, userInput, code, password, data, error_5;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (event) {\n                            event.preventDefault();\n                        }\n                        if (!Auth || typeof Auth.forgotPasswordSubmit !== 'function') {\n                            throw new Error(NO_AUTH_MODULE_FOUND);\n                        }\n                        this.loading = true;\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, 4, 5]);\n                        _a = this.forgotPasswordAttrs, userInput = _a.userInput, code = _a.code, password = _a.password;\n                        return [4 /*yield*/, Auth.forgotPasswordSubmit(userInput.trim(), code, password)];\n                    case 2:\n                        data = _b.sent();\n                        logger.debug(data);\n                        this.handleAuthStateChange(AuthState.SignIn);\n                        this.delivery = null;\n                        return [3 /*break*/, 5];\n                    case 3:\n                        error_5 = _b.sent();\n                        dispatchToastHubEvent(error_5);\n                        return [3 /*break*/, 5];\n                    case 4:\n                        this.loading = false;\n                        return [7 /*endfinally*/];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_3.prototype.render = function () {\n        var _this = this;\n        var submitFn = this.delivery\n            ? function (event) { return _this.handleSubmit(event); }\n            : function (event) { return _this.handleSend(event); };\n        var submitButtonText = this.delivery\n            ? this.submitButtonText\n            : this.sendButtonText;\n        return (h(Host, null, h(\"amplify-form-section\", { headerText: I18n.get(this.headerText), handleSubmit: submitFn, loading: this.loading, secondaryFooterContent: h(\"amplify-button\", { variant: \"anchor\", onClick: function () { return _this.handleAuthStateChange(AuthState.SignIn); }, \"data-test\": \"forgot-password-back-to-sign-in-link\" }, I18n.get(Translations.BACK_TO_SIGN_IN)), testDataPrefix: 'forgot-password', submitButtonText: I18n.get(submitButtonText) }, h(\"amplify-auth-fields\", { formFields: this.newFormFields }))));\n    };\n    Object.defineProperty(class_3, \"watchers\", {\n        get: function () {\n            return {\n                \"formFields\": [\"formFieldsHandler\"]\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return class_3;\n}());\nvar logger$1 = new ConsoleLogger('amplify-require-new-password');\nvar AmplifyRequireNewPassword = /** @class */ (function () {\n    function class_4(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        /** The header text of the forgot password section */\n        this.headerText = Translations.CHANGE_PASSWORD;\n        /** The text displayed inside of the submit button for the form */\n        this.submitButtonText = Translations.CHANGE_PASSWORD_ACTION;\n        /** The function called when submitting a new password */\n        this.handleSubmit = function (event) { return _this.completeNewPassword(event); };\n        /** Auth state change handler for this component */\n        this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n        /** The form fields displayed inside of the forgot password form */\n        this.formFields = [\n            {\n                type: AuthFormField.Password,\n                required: true,\n                handleInputChange: function (event) { return _this.handlePasswordChange(event); },\n                label: I18n.get(Translations.NEW_PASSWORD_LABEL),\n                placeholder: I18n.get(Translations.NEW_PASSWORD_PLACEHOLDER),\n                inputProps: {\n                    'data-test': 'require-new-password-password-input',\n                },\n            },\n        ];\n        this.loading = false;\n        this.requiredAttributes = {};\n        this.newFormFields = this.formFields;\n        this.phoneNumber = {\n            countryDialCodeValue: COUNTRY_DIAL_CODE_DEFAULT,\n            phoneNumberValue: ' ',\n        };\n    }\n    class_4.prototype.userHandler = function () {\n        this.setCurrentUser();\n    };\n    class_4.prototype.handleRequiredAttributeInputChange = function (attribute, event) {\n        if (attribute === 'phone_number') {\n            this.formatPhoneNumber(event);\n        }\n        else {\n            this.requiredAttributes[attribute] = event.target.value;\n        }\n    };\n    class_4.prototype.setCurrentUser = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var user, error_6, userRequiredAttributes, requiredAttributesMap_1;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!!this.user) return [3 /*break*/, 5];\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, Auth.currentAuthenticatedUser()];\n                    case 2:\n                        user = _a.sent();\n                        if (user)\n                            this.currentUser = user;\n                        return [3 /*break*/, 4];\n                    case 3:\n                        error_6 = _a.sent();\n                        dispatchToastHubEvent(error_6);\n                        return [3 /*break*/, 4];\n                    case 4: return [3 /*break*/, 6];\n                    case 5:\n                        this.currentUser = this.user;\n                        _a.label = 6;\n                    case 6:\n                        if (this.currentUser &&\n                            this.currentUser.challengeParam &&\n                            this.currentUser.challengeParam.requiredAttributes) {\n                            userRequiredAttributes = this.currentUser.challengeParam\n                                .requiredAttributes;\n                            requiredAttributesMap_1 = getRequiredAttributesMap();\n                            userRequiredAttributes.forEach(function (attribute) {\n                                var formField = {\n                                    type: attribute,\n                                    required: true,\n                                    label: requiredAttributesMap_1[attribute].label,\n                                    placeholder: requiredAttributesMap_1[attribute].placeholder,\n                                    handleInputChange: function (event) { return _this.handleRequiredAttributeInputChange(attribute, event); },\n                                    inputProps: {\n                                        'data-test': \"require-new-password-\" + attribute + \"-input\",\n                                    },\n                                };\n                                _this.newFormFields = __spreadArrays(_this.newFormFields, [formField]);\n                            });\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_4.prototype.componentWillLoad = function () {\n        return this.setCurrentUser();\n    };\n    class_4.prototype.handlePasswordChange = function (event) {\n        this.password = event.target.value;\n    };\n    class_4.prototype.formatPhoneNumber = function (event) {\n        handlePhoneNumberChange(event, this.phoneNumber);\n        /**\n         * composePhoneNumberInput will throw an error if the phoneNumberValue it receives\n         * is empty. Adding a check here to try and make sure that doesn't happen...but will\n         * wrap it in a try/catch block just in case as well\n         */\n        try {\n            if (event.target.name === PHONE_SUFFIX &&\n                this.phoneNumber.phoneNumberValue) {\n                var composedInput = composePhoneNumberInput(this.phoneNumber);\n                this.requiredAttributes['phone_number'] = composedInput;\n            }\n        }\n        catch (err) {\n            logger$1.error(\"error in phone number field - \" + err);\n        }\n    };\n    class_4.prototype.completeNewPassword = function (event) {\n        return __awaiter(this, void 0, void 0, function () {\n            var user, _a, error_7;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (event) {\n                            event.preventDefault();\n                        }\n                        if (!Auth || typeof Auth.completeNewPassword !== 'function') {\n                            throw new Error(NO_AUTH_MODULE_FOUND);\n                        }\n                        this.loading = true;\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 8, 9, 10]);\n                        return [4 /*yield*/, Auth.completeNewPassword(this.currentUser, this.password, this.requiredAttributes)];\n                    case 2:\n                        user = _b.sent();\n                        logger$1.debug('complete new password', user);\n                        _a = user.challengeName;\n                        switch (_a) {\n                            case ChallengeName.SMSMFA: return [3 /*break*/, 3];\n                            case ChallengeName.MFASetup: return [3 /*break*/, 4];\n                        }\n                        return [3 /*break*/, 5];\n                    case 3:\n                        this.handleAuthStateChange(AuthState.ConfirmSignIn, user);\n                        return [3 /*break*/, 7];\n                    case 4:\n                        logger$1.debug('TOTP setup', user.challengeParam);\n                        this.handleAuthStateChange(AuthState.TOTPSetup, user);\n                        return [3 /*break*/, 7];\n                    case 5: return [4 /*yield*/, checkContact(user, this.handleAuthStateChange)];\n                    case 6:\n                        _b.sent();\n                        _b.label = 7;\n                    case 7: return [3 /*break*/, 10];\n                    case 8:\n                        error_7 = _b.sent();\n                        dispatchToastHubEvent(error_7);\n                        return [3 /*break*/, 10];\n                    case 9:\n                        this.loading = false;\n                        return [7 /*endfinally*/];\n                    case 10: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_4.prototype.render = function () {\n        var _this = this;\n        return (h(Host, null, h(\"amplify-form-section\", { headerText: I18n.get(this.headerText), handleSubmit: this.handleSubmit, loading: this.loading, secondaryFooterContent: h(\"amplify-button\", { variant: \"anchor\", onClick: function () { return _this.handleAuthStateChange(AuthState.SignIn); } }, I18n.get(Translations.BACK_TO_SIGN_IN)), submitButtonText: I18n.get(this.submitButtonText) }, h(\"amplify-auth-fields\", { formFields: this.newFormFields }))));\n    };\n    Object.defineProperty(class_4, \"watchers\", {\n        get: function () {\n            return {\n                \"user\": [\"userHandler\"]\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return class_4;\n}());\nvar amplifySignInCss = \":host{--footer-size:var(--amplify-text-sm);--footer-color:var(--amplify-grey);--footer-font-family:var(--amplify-font-family);--font-weight:var(--amplify-font-weight)}.sign-in-form-footer{font-family:var(--footer-font-family);font-size:var(--footer-size);color:var(--footer-color);font-weight:--font-weight;display:-ms-flexbox;display:flex;-ms-flex-direction:column-reverse;flex-direction:column-reverse;-ms-flex-align:center;align-items:center;-ms-flex-pack:distribute;justify-content:space-around}.sign-in-form-footer amplify-button{margin-bottom:0.625rem}@media (min-width: 672px){.sign-in-form-footer{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:baseline;align-items:baseline}.sign-in-form-footer amplify-button{margin-bottom:0}}.sign-in-form-footer *+*{margin-bottom:15px}.full-width-footer-content{width:100%}\";\nvar AmplifySignIn = /** @class */ (function () {\n    function class_5(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        /** Fires when sign in form is submitted */\n        this.handleSubmit = function (event) { return _this.signIn(event); };\n        /** Used for header text in sign in component */\n        this.headerText = Translations.SIGN_IN_HEADER_TEXT;\n        /** Used for the submit button text in sign in component */\n        this.submitButtonText = Translations.SIGN_IN_ACTION;\n        /** Auth state change handler for this component */\n        // prettier-ignore\n        this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n        /** Username Alias is used to setup authentication with `username`, `email` or `phone_number`  */\n        this.usernameAlias = 'username';\n        /**\n         * Form fields allows you to utilize our pre-built components such as username field, code field, password field, email field, etc.\n         * by passing an array of strings that you would like the order of the form to be in. If you need more customization, such as changing\n         * text for a label or adjust a placeholder, you can follow the structure below in order to do just that.\n         * ```\n         * [\n         *  {\n         *    type: string,\n         *    label: string,\n         *    placeholder: string,\n         *    hint: string | Functional Component | null,\n         *    required: boolean\n         *  }\n         * ]\n         * ```\n         */\n        this.formFields = [];\n        /** Hides the sign up link */\n        this.hideSignUp = false;\n        this.newFormFields = [];\n        /* Whether or not the sign-in component is loading */\n        this.loading = false;\n        this.phoneNumber = {\n            countryDialCodeValue: COUNTRY_DIAL_CODE_DEFAULT,\n            phoneNumberValue: null,\n        };\n        this.signInAttributes = {\n            userInput: '',\n            password: '',\n        };\n    }\n    class_5.prototype.componentWillLoad = function () {\n        checkUsernameAlias(this.usernameAlias);\n        this.buildFormFields();\n    };\n    class_5.prototype.formFieldsHandler = function () {\n        this.buildFormFields();\n    };\n    class_5.prototype.handleFormFieldInputChange = function (fieldType) {\n        var _this = this;\n        switch (fieldType) {\n            case 'username':\n            case 'email':\n                return function (event) { return (_this.signInAttributes.userInput = event.target.value); };\n            case 'phone_number':\n                return function (event) { return handlePhoneNumberChange(event, _this.phoneNumber); };\n            case 'password':\n                return function (event) { return (_this.signInAttributes.password = event.target.value); };\n            default:\n                return function () { };\n        }\n    };\n    class_5.prototype.handleFormFieldInputWithCallback = function (event, field) {\n        var fnToCall = field['handleInputChange']\n            ? field['handleInputChange']\n            : function (event, cb) {\n                cb(event);\n            };\n        var callback = this.handleFormFieldInputChange(field.type);\n        fnToCall(event, callback.bind(this));\n    };\n    class_5.prototype.signIn = function (event) {\n        return __awaiter(this, void 0, void 0, function () {\n            var username;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        // avoid submitting the form\n                        if (event) {\n                            event.preventDefault();\n                        }\n                        this.loading = true;\n                        switch (this.usernameAlias) {\n                            case 'phone_number':\n                                try {\n                                    this.signInAttributes.userInput = composePhoneNumberInput(this.phoneNumber);\n                                }\n                                catch (error) {\n                                    dispatchToastHubEvent(error);\n                                }\n                        }\n                        username = this.signInAttributes.userInput.trim();\n                        return [4 /*yield*/, handleSignIn(username, this.signInAttributes.password, this.handleAuthStateChange, this.usernameAlias)];\n                    case 1:\n                        _a.sent();\n                        this.loading = false;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_5.prototype.buildDefaultFormFields = function () {\n        var _this = this;\n        var formFieldInputs = [];\n        switch (this.usernameAlias) {\n            case 'email':\n                formFieldInputs.push({\n                    type: 'email',\n                    required: true,\n                    handleInputChange: this.handleFormFieldInputChange('email'),\n                    inputProps: {\n                        'data-test': 'sign-in-email-input',\n                        autocomplete: 'username',\n                    },\n                });\n                break;\n            case 'phone_number':\n                formFieldInputs.push({\n                    type: 'phone_number',\n                    required: true,\n                    handleInputChange: this.handleFormFieldInputChange('phone_number'),\n                    inputProps: {\n                        'data-test': 'sign-in-phone-number-input',\n                        autocomplete: 'username',\n                    },\n                });\n                break;\n            case 'username':\n            default:\n                formFieldInputs.push({\n                    type: 'username',\n                    required: true,\n                    handleInputChange: this.handleFormFieldInputChange('username'),\n                    inputProps: {\n                        'data-test': 'sign-in-username-input',\n                        autocomplete: 'username',\n                    },\n                });\n                break;\n        }\n        formFieldInputs.push({\n            type: 'password',\n            hint: (h(\"div\", null, I18n.get(Translations.FORGOT_PASSWORD_TEXT), ' ', h(\"amplify-button\", { variant: \"anchor\", onClick: function () { return _this.handleAuthStateChange(AuthState.ForgotPassword); }, \"data-test\": \"sign-in-forgot-password-link\" }, I18n.get(Translations.RESET_PASSWORD_TEXT)))),\n            required: true,\n            handleInputChange: this.handleFormFieldInputChange('password'),\n            inputProps: {\n                'data-test': 'sign-in-password-input',\n            },\n        });\n        this.newFormFields = __spreadArrays(formFieldInputs);\n    };\n    class_5.prototype.buildFormFields = function () {\n        var _this = this;\n        if (this.formFields.length === 0) {\n            this.buildDefaultFormFields();\n        }\n        else {\n            var newFields_2 = [];\n            this.formFields.forEach(function (field) {\n                var newField = Object.assign({}, field);\n                // TODO: handle hint better\n                if (newField.type === 'password') {\n                    newField['hint'] = isHintValid(newField) ? (h(\"div\", null, I18n.get(Translations.FORGOT_PASSWORD_TEXT), ' ', h(\"amplify-button\", { variant: \"anchor\", onClick: function () { return _this.handleAuthStateChange(AuthState.ForgotPassword); }, \"data-test\": \"sign-in-forgot-password-link\" }, I18n.get(Translations.RESET_PASSWORD_TEXT)))) : (newField['hint']);\n                }\n                newField['handleInputChange'] = function (event) { return _this.handleFormFieldInputWithCallback(event, field); };\n                _this.setFieldValue(newField, _this.signInAttributes);\n                newFields_2.push(newField);\n            });\n            this.newFormFields = newFields_2;\n        }\n    };\n    class_5.prototype.setFieldValue = function (field, formAttributes) {\n        switch (field.type) {\n            case 'username':\n            case 'email':\n                if (field.value === undefined) {\n                    formAttributes.userInput = '';\n                }\n                else {\n                    formAttributes.userInput = field.value;\n                }\n                break;\n            case 'phone_number':\n                if (field.dialCode) {\n                    this.phoneNumber.countryDialCodeValue = field.dialCode;\n                }\n                this.phoneNumber.phoneNumberValue = field.value;\n                break;\n            case 'password':\n                if (field.value === undefined) {\n                    formAttributes.password = '';\n                }\n                else {\n                    formAttributes.password = field.value;\n                }\n                break;\n        }\n    };\n    class_5.prototype.render = function () {\n        var _this = this;\n        return (h(Host, null, h(\"amplify-form-section\", { headerText: I18n.get(this.headerText), handleSubmit: this.handleSubmit, testDataPrefix: 'sign-in' }, h(\"div\", { slot: \"subtitle\" }, h(\"slot\", { name: \"header-subtitle\" })), h(\"slot\", { name: \"federated-buttons\" }, h(\"amplify-federated-buttons\", { handleAuthStateChange: this.handleAuthStateChange, federated: this.federated })), !isEmpty(this.federated) && h(\"amplify-strike\", null, \"or\"), h(\"amplify-auth-fields\", { formFields: this.newFormFields }), h(\"div\", { slot: \"amplify-form-section-footer\", class: \"sign-in-form-footer\" }, h(\"slot\", { name: \"footer\" }, !this.hideSignUp && (h(\"slot\", { name: \"secondary-footer-content\" }, h(\"span\", null, I18n.get(Translations.NO_ACCOUNT_TEXT), ' ', h(\"amplify-button\", { variant: \"anchor\", onClick: function () { return _this.handleAuthStateChange(AuthState.SignUp); }, \"data-test\": \"sign-in-create-account-link\" }, I18n.get(Translations.CREATE_ACCOUNT_TEXT))))), h(\"div\", { class: this.hideSignUp ? 'full-width-footer-content' : '' }, h(\"slot\", { name: \"primary-footer-content\" }, h(\"amplify-button\", { type: \"submit\", disabled: this.loading, \"data-test\": \"sign-in-sign-in-button\" }, this.loading ? (h(\"amplify-loading-spinner\", null)) : (h(\"span\", null, I18n.get(this.submitButtonText)))))))))));\n    };\n    Object.defineProperty(class_5, \"watchers\", {\n        get: function () {\n            return {\n                \"formFields\": [\"formFieldsHandler\"]\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return class_5;\n}());\nAmplifySignIn.style = amplifySignInCss;\nvar amplifySignUpCss = \"amplify-sign-up{--footer-font-family:var(--amplify-font-family);--footer-font-size:var(--amplify-text-sm);--footer-color:var(--amplify-grey);--font-weight:var(--amplify-font-weight)}.sign-up-form-footer{font-family:var(--footer-font-family);font-size:var(--footer-font-size);color:var(--footer-color);font-weight:--font-weight;display:-ms-flexbox;display:flex;-ms-flex-direction:column-reverse;flex-direction:column-reverse;-ms-flex-align:center;align-items:center;-ms-flex-pack:distribute;justify-content:space-around}.sign-up-form-footer amplify-button{margin-bottom:0.625rem}@media (min-width: 672px){.sign-up-form-footer{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:baseline;align-items:baseline}.sign-up-form-footer amplify-button{margin-bottom:0}}.sign-up-form-footer *+*{margin-bottom:15px}\";\nvar AmplifySignUp = /** @class */ (function () {\n    function class_6(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        /** Fires when sign up form is submitted */\n        this.handleSubmit = function (event) { return _this.signUp(event); };\n        /** Override for handling the Auth.SignUp API call */\n        this.handleSignUp = function (params) { return _this.authSignUp(params); };\n        /** Used for header text in sign up component */\n        this.headerText = Translations.SIGN_UP_HEADER_TEXT;\n        /** Used for the submit button text in sign up component */\n        this.submitButtonText = Translations.SIGN_UP_SUBMIT_BUTTON_TEXT;\n        /** Used for the submit button text in sign up component */\n        this.haveAccountText = Translations.SIGN_UP_HAVE_ACCOUNT_TEXT;\n        /** Text used for the sign in hyperlink */\n        this.signInText = Translations.SIGN_IN_TEXT;\n        /**\n         * Form fields allows you to utilize our pre-built components such as username field, code field, password field, email field, etc.\n         * by passing an array of strings that you would like the order of the form to be in. If you need more customization, such as changing\n         * text for a label or adjust a placeholder, you can follow the structure below in order to do just that.\n         * ```\n         * [\n         *  {\n         *    type: string,\n         *    label: string,\n         *    placeholder: string,\n         *    hint: string | Functional Component | null,\n         *    required: boolean\n         *  }\n         * ]\n         * ```\n         */\n        this.formFields = [];\n        /** Auth state change handler for this component\n         * e.g. SignIn -> 'Create Account' link -> SignUp\n         */\n        // prettier-ignore\n        this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n        /** Username Alias is used to setup authentication with `username`, `email` or `phone_number`  */\n        this.usernameAlias = 'username';\n        // private userInput: string | PhoneNumberInterface;\n        this.newFormFields = [];\n        this.phoneNumber = {\n            countryDialCodeValue: COUNTRY_DIAL_CODE_DEFAULT,\n            phoneNumberValue: null,\n        };\n        this.loading = false;\n        this.signUpAttributes = {\n            username: '',\n            password: '',\n            attributes: {},\n        };\n    }\n    class_6.prototype.handleFormFieldInputChange = function (fieldType) {\n        var _this = this;\n        switch (fieldType) {\n            case 'username':\n                return function (event) { return (_this.signUpAttributes.username = event.target.value); };\n            case 'password':\n                return function (event) { return (_this.signUpAttributes.password = event.target.value); };\n            case 'email':\n                return function (event) { return (_this.signUpAttributes.attributes.email = event.target.value); };\n            case 'phone_number':\n                return function (event) { return handlePhoneNumberChange(event, _this.phoneNumber); };\n            default:\n                return function (event) { return (_this.signUpAttributes.attributes[fieldType] = event.target.value); };\n        }\n    };\n    class_6.prototype.handleFormFieldInputWithCallback = function (event, field) {\n        var fnToCall = field['handleInputChange']\n            ? field['handleInputChange']\n            : function (event, cb) {\n                cb(event);\n            };\n        var callback = this.handleFormFieldInputChange(field.type);\n        fnToCall(event, callback.bind(this));\n    };\n    class_6.prototype.authSignUp = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var data;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Auth.signUp(params)];\n                    case 1:\n                        data = _a.sent();\n                        if (!data) {\n                            throw new Error(Translations.SIGN_UP_FAILED);\n                        }\n                        return [2 /*return*/, data];\n                }\n            });\n        });\n    };\n    class_6.prototype.assignPhoneNumberToSignUpAttributes = function () {\n        if (this.phoneNumber.phoneNumberValue) {\n            try {\n                this.signUpAttributes.attributes.phone_number = composePhoneNumberInput(this.phoneNumber);\n            }\n            catch (error) {\n                dispatchToastHubEvent(error);\n            }\n        }\n    };\n    class_6.prototype.assignUserNameAliasToSignUpAttributes = function () {\n        switch (this.usernameAlias) {\n            case 'email':\n            case 'phone_number':\n                this.signUpAttributes.username = this.signUpAttributes.attributes[this.usernameAlias];\n                break;\n        }\n    };\n    class_6.prototype.assignFormInputToSignUpAttributes = function () {\n        this.assignPhoneNumberToSignUpAttributes();\n        this.assignUserNameAliasToSignUpAttributes();\n    };\n    class_6.prototype.validateSignUpAttributes = function () {\n        if (!this.signUpAttributes.username) {\n            if (this.usernameAlias === UsernameAlias.email) {\n                throw new Error(Translations.EMPTY_EMAIL);\n            }\n            else if (this.usernameAlias === UsernameAlias.phone_number) {\n                throw new Error(Translations.EMPTY_PHONE);\n            }\n            else {\n                throw new Error(Translations.EMPTY_USERNAME);\n            }\n        }\n        if (this.signUpAttributes.username.indexOf(' ') >= 0) {\n            throw new Error(Translations.USERNAME_REMOVE_WHITESPACE);\n        }\n        if (this.signUpAttributes.password !== this.signUpAttributes.password.trim()) {\n            throw new Error(Translations.PASSWORD_REMOVE_WHITESPACE);\n        }\n    };\n    // TODO: Add validation\n    // TODO: Prefix\n    class_6.prototype.signUp = function (event) {\n        return __awaiter(this, void 0, void 0, function () {\n            var data, signUpAttrs, error_8;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (event) {\n                            event.preventDefault();\n                        }\n                        if (!Auth || typeof Auth.signUp !== 'function') {\n                            throw new Error(NO_AUTH_MODULE_FOUND);\n                        }\n                        this.loading = true;\n                        this.assignFormInputToSignUpAttributes();\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 6, 7, 8]);\n                        this.validateSignUpAttributes();\n                        return [4 /*yield*/, this.handleSignUp(this.signUpAttributes)];\n                    case 2:\n                        data = _a.sent();\n                        if (!data.userConfirmed) return [3 /*break*/, 4];\n                        return [4 /*yield*/, handleSignIn(this.signUpAttributes.username, this.signUpAttributes.password, this.handleAuthStateChange)];\n                    case 3:\n                        _a.sent();\n                        return [3 /*break*/, 5];\n                    case 4:\n                        signUpAttrs = Object.assign({}, this.signUpAttributes);\n                        this.handleAuthStateChange(AuthState.ConfirmSignUp, Object.assign(Object.assign({}, data.user), { signUpAttrs: signUpAttrs }));\n                        _a.label = 5;\n                    case 5: return [3 /*break*/, 8];\n                    case 6:\n                        error_8 = _a.sent();\n                        dispatchToastHubEvent(error_8);\n                        return [3 /*break*/, 8];\n                    case 7:\n                        this.loading = false;\n                        return [7 /*endfinally*/];\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_6.prototype.buildDefaultFormFields = function () {\n        switch (this.usernameAlias) {\n            case 'email':\n                this.newFormFields = [\n                    {\n                        type: 'email',\n                        placeholder: I18n.get(Translations.SIGN_UP_EMAIL_PLACEHOLDER),\n                        required: true,\n                        handleInputChange: this.handleFormFieldInputChange('email'),\n                        inputProps: {\n                            'data-test': 'sign-up-email-input',\n                            autocomplete: 'username',\n                        },\n                    },\n                    {\n                        type: 'password',\n                        placeholder: I18n.get(Translations.SIGN_UP_PASSWORD_PLACEHOLDER),\n                        required: true,\n                        handleInputChange: this.handleFormFieldInputChange('password'),\n                        inputProps: {\n                            'data-test': 'sign-up-password-input',\n                            autocomplete: 'new-password',\n                        },\n                    },\n                    {\n                        type: 'phone_number',\n                        required: true,\n                        handleInputChange: this.handleFormFieldInputChange('phone_number'),\n                        inputProps: {\n                            'data-test': 'sign-up-phone-number-input',\n                            autocomplete: 'tel-national',\n                        },\n                    },\n                ];\n                break;\n            case 'phone_number':\n                this.newFormFields = [\n                    {\n                        type: 'phone_number',\n                        required: true,\n                        handleInputChange: this.handleFormFieldInputChange('phone_number'),\n                        inputProps: {\n                            'data-test': 'sign-up-phone-number-input',\n                            autocomplete: 'username',\n                        },\n                    },\n                    {\n                        type: 'password',\n                        placeholder: I18n.get(Translations.SIGN_UP_PASSWORD_PLACEHOLDER),\n                        required: true,\n                        handleInputChange: this.handleFormFieldInputChange('password'),\n                        inputProps: {\n                            'data-test': 'sign-up-password-input',\n                            autocomplete: 'new-password',\n                        },\n                    },\n                    {\n                        type: 'email',\n                        placeholder: I18n.get(Translations.SIGN_UP_EMAIL_PLACEHOLDER),\n                        required: true,\n                        handleInputChange: this.handleFormFieldInputChange('email'),\n                        inputProps: {\n                            'data-test': 'sign-up-email-input',\n                            autocomplete: 'email',\n                        },\n                    },\n                ];\n                break;\n            case 'username':\n            default:\n                this.newFormFields = [\n                    {\n                        type: 'username',\n                        placeholder: I18n.get(Translations.SIGN_UP_USERNAME_PLACEHOLDER),\n                        required: true,\n                        handleInputChange: this.handleFormFieldInputChange('username'),\n                        inputProps: {\n                            'data-test': 'sign-up-username-input',\n                            autocomplete: 'username',\n                        },\n                    },\n                    {\n                        type: 'password',\n                        placeholder: I18n.get(Translations.SIGN_UP_PASSWORD_PLACEHOLDER),\n                        required: true,\n                        handleInputChange: this.handleFormFieldInputChange('password'),\n                        inputProps: {\n                            'data-test': 'sign-up-password-input',\n                            autocomplete: 'new-password',\n                        },\n                    },\n                    {\n                        type: 'email',\n                        placeholder: I18n.get(Translations.SIGN_UP_EMAIL_PLACEHOLDER),\n                        required: true,\n                        handleInputChange: this.handleFormFieldInputChange('email'),\n                        inputProps: {\n                            'data-test': 'sign-up-email-input',\n                        },\n                    },\n                    {\n                        type: 'phone_number',\n                        required: true,\n                        handleInputChange: this.handleFormFieldInputChange('phone_number'),\n                        inputProps: {\n                            'data-test': 'sign-up-phone-number-input',\n                        },\n                    },\n                ];\n                break;\n        }\n    };\n    class_6.prototype.buildFormFields = function () {\n        var _this = this;\n        if (this.formFields.length === 0) {\n            this.buildDefaultFormFields();\n        }\n        else {\n            var newFields_3 = [];\n            this.formFields.forEach(function (field) {\n                var newField = Object.assign({}, field);\n                newField['handleInputChange'] = function (event) { return _this.handleFormFieldInputWithCallback(event, field); };\n                _this.setFieldValue(field, _this.signUpAttributes);\n                newFields_3.push(newField);\n            });\n            this.newFormFields = newFields_3;\n        }\n    };\n    class_6.prototype.setFieldValue = function (field, formAttributes) {\n        switch (field.type) {\n            case 'username':\n                if (field.value === undefined) {\n                    formAttributes.username = '';\n                }\n                else {\n                    formAttributes.username = field.value;\n                }\n                break;\n            case 'password':\n                if (field.value === undefined) {\n                    formAttributes.password = '';\n                }\n                else {\n                    formAttributes.password = field.value;\n                }\n                break;\n            case 'email':\n                formAttributes.attributes.email = field.value;\n                break;\n            case 'phone_number':\n                if (field.dialCode) {\n                    this.phoneNumber.countryDialCodeValue = field.dialCode;\n                }\n                this.phoneNumber.phoneNumberValue = field.value;\n                break;\n            default:\n                formAttributes.attributes[field.type] = field.value;\n                break;\n        }\n    };\n    class_6.prototype.componentWillLoad = function () {\n        checkUsernameAlias(this.usernameAlias);\n        this.buildFormFields();\n    };\n    class_6.prototype.formFieldsHandler = function () {\n        this.buildFormFields();\n    };\n    class_6.prototype.render = function () {\n        var _this = this;\n        return (h(Host, null, h(\"amplify-form-section\", { headerText: I18n.get(this.headerText), handleSubmit: this.handleSubmit, testDataPrefix: 'sign-up' }, h(\"div\", { slot: \"subtitle\" }, h(\"slot\", { name: \"header-subtitle\" })), h(\"amplify-auth-fields\", { formFields: this.newFormFields }), h(\"div\", { class: \"sign-up-form-footer\", slot: \"amplify-form-section-footer\" }, h(\"slot\", { name: \"footer\" }, h(\"slot\", { name: \"secondary-footer-content\" }, h(\"span\", null, I18n.get(this.haveAccountText), ' ', h(\"amplify-button\", { variant: \"anchor\", onClick: function () { return _this.handleAuthStateChange(AuthState.SignIn); }, \"data-test\": \"sign-up-sign-in-link\" }, I18n.get(this.signInText)))), h(\"slot\", { name: \"primary-footer-content\" }, h(\"amplify-button\", { type: \"submit\", \"data-test\": \"sign-up-create-account-button\", disabled: this.loading }, this.loading ? (h(\"amplify-loading-spinner\", null)) : (h(\"span\", null, I18n.get(this.submitButtonText))))))))));\n    };\n    Object.defineProperty(class_6, \"watchers\", {\n        get: function () {\n            return {\n                \"formFields\": [\"formFieldsHandler\"]\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return class_6;\n}());\nAmplifySignUp.style = amplifySignUpCss;\nvar logger$2 = new Logger('AmplifyVerifyContact');\nvar AmplifyVerifyContact = /** @class */ (function () {\n    function class_7(hostRef) {\n        registerInstance(this, hostRef);\n        /** Authentication state handler */\n        this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n        this.loading = false;\n    }\n    class_7.prototype.handleSubmit = function (event) {\n        event.preventDefault();\n        this.verifyAttr ? this.submit(this.code) : this.verify(this.contact);\n    };\n    class_7.prototype.submit = function (code) {\n        return __awaiter(this, void 0, void 0, function () {\n            var attr, data, error_9;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        attr = this.verifyAttr;\n                        if (!Auth || typeof Auth.verifyCurrentUserAttributeSubmit !== 'function') {\n                            throw new Error(NO_AUTH_MODULE_FOUND);\n                        }\n                        this.loading = true;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, 4, 5]);\n                        return [4 /*yield*/, Auth.verifyCurrentUserAttributeSubmit(attr, code)];\n                    case 2:\n                        data = _a.sent();\n                        logger$2.debug(data);\n                        this.handleAuthStateChange(AuthState.SignedIn, this.user);\n                        this.verifyAttr = null;\n                        return [3 /*break*/, 5];\n                    case 3:\n                        error_9 = _a.sent();\n                        dispatchToastHubEvent(error_9);\n                        logger$2.error(error_9);\n                        return [3 /*break*/, 5];\n                    case 4:\n                        this.loading = false;\n                        return [7 /*endfinally*/];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_7.prototype.verify = function (contact) {\n        return __awaiter(this, void 0, void 0, function () {\n            var data, error_10;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!contact) {\n                            logger$2.error('Neither Email nor Phone Number selected');\n                            return [2 /*return*/];\n                        }\n                        if (!Auth || typeof Auth.verifyCurrentUserAttribute !== 'function') {\n                            throw new Error(NO_AUTH_MODULE_FOUND);\n                        }\n                        this.loading = true;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, 4, 5]);\n                        return [4 /*yield*/, Auth.verifyCurrentUserAttribute(contact)];\n                    case 2:\n                        data = _a.sent();\n                        logger$2.debug(data);\n                        this.verifyAttr = contact;\n                        return [3 /*break*/, 5];\n                    case 3:\n                        error_10 = _a.sent();\n                        dispatchToastHubEvent(error_10);\n                        logger$2.error(error_10);\n                        return [3 /*break*/, 5];\n                    case 4:\n                        this.loading = false;\n                        return [7 /*endfinally*/];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_7.prototype.handleInputChange = function (event) {\n        var inputName = event.target.name;\n        if (inputName === 'code') {\n            this.code = event.target.value;\n        }\n        else if (inputName === 'contact') {\n            this.contact = event.target.value;\n        }\n    };\n    class_7.prototype.renderSubmit = function () {\n        var _this = this;\n        return (h(\"div\", null, h(\"amplify-input\", { inputProps: {\n                autocomplete: 'off',\n                'data-test': 'verify-contact-code-input',\n            }, name: \"code\", placeholder: I18n.get(Translations.CODE_PLACEHOLDER), handleInputChange: function (event) { return _this.handleInputChange(event); } })));\n    };\n    class_7.prototype.renderVerify = function () {\n        var _this = this;\n        var user = this.user;\n        if (!user) {\n            logger$2.debug('No user to verify');\n            return null;\n        }\n        var unverified = user.unverified;\n        if (!unverified) {\n            logger$2.debug('Unverified variable does not exist on user');\n            return null;\n        }\n        var email = unverified.email, phone_number = unverified.phone_number;\n        return (h(\"div\", null, email && (h(\"amplify-radio-button\", { label: I18n.get(Translations.VERIFY_CONTACT_EMAIL_LABEL), key: \"email\", name: \"contact\", value: \"email\", handleInputChange: function (event) { return _this.handleInputChange(event); }, inputProps: {\n                'data-test': 'verify-contact-email-radio',\n            } })), phone_number && (h(\"amplify-radio-button\", { label: I18n.get(Translations.VERIFY_CONTACT_PHONE_LABEL), key: \"phone_number\", name: \"contact\", value: \"phone_number\", handleInputChange: function (event) { return _this.handleInputChange(event); }, inputProps: {\n                'data-test': 'verify-contact-phone-number-radio',\n            } }))));\n    };\n    class_7.prototype.render = function () {\n        var _this = this;\n        return (h(Host, null, h(\"amplify-form-section\", { handleSubmit: function (event) { return _this.handleSubmit(event); }, headerText: I18n.get(Translations.VERIFY_CONTACT_HEADER_TEXT), loading: this.loading, secondaryFooterContent: h(\"span\", null, h(\"amplify-button\", { variant: \"anchor\", onClick: function () { return _this.handleAuthStateChange(AuthState.SignedIn, _this.user); }, \"data-test\": \"verify-contact-skip-link\" }, \"Skip\")), submitButtonText: this.verifyAttr\n                ? I18n.get(Translations.VERIFY_CONTACT_SUBMIT_LABEL)\n                : I18n.get(Translations.VERIFY_CONTACT_VERIFY_LABEL) }, this.verifyAttr ? this.renderSubmit() : this.renderVerify())));\n    };\n    return class_7;\n}());\nexport { AmplifyConfirmSignIn as amplify_confirm_sign_in, AmplifyConfirmSignUp as amplify_confirm_sign_up, AmplifyForgotPassword as amplify_forgot_password, AmplifyRequireNewPassword as amplify_require_new_password, AmplifySignIn as amplify_sign_in, AmplifySignUp as amplify_sign_up, AmplifyVerifyContact as amplify_verify_contact };\n"],"sourceRoot":""}